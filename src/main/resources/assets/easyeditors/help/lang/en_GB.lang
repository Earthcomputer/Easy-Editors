# PLAYER SELECTORS

help.playerSelectors.paragraph.3.part2=Suppose you want to select one, or more, of the entities in this scene with the command block (left of the armour stands). What you want is certain features to select them by. In entity selectors in the command editor, you will see this:

help.playerSelectors.selectionMode.nearest=1. Nearest - you can select the closest entity that matches the other options. If more than one entity is selectable, entities will be ordered from closest to furthest.
help.playerSelectors.selectionMode.farthest=2. Furthest - you can select the furthest entity that matches the other options. If more than one entity is selectable, entities will be ordered from furthest to closest.
help.playerSelectors.selectionMode.all=3. All - you can select all entities that match the other options. Entities matched are ordered from closest to furthest.
help.playerSelectors.selectionMode.farthest.example="Furthest Villager" would select the baby villager;

help.playerSelectors.targetInverted=That small checkbox in between the selection mode and the target entity which is labelled "Not" basically means, when it is checked, that whatever entity type follows it, it is targeting anything which is not that entity.

help.playerSelectors.count=This is the maximum number of entities to match. If this number is set to 1, the default, only one entity will be matched (the nearest, furthest, or a random one); If it is set to 2, the nearest 2, the furthest 2 or 2 random entities will be matched; and so on.
help.playerSelectors.count.example=For example, say we're looking for "Nearest Armour Stand". In the scenario above, if count is 1, only the armour stand with the leather armour will be selected; if count is 2, the armour stand with the iron armour will be selected as well; if count is 3, the armour stand with the diamond armour is selected as well as the other two. If we're looking for "Furthest Villager", if count is 1, the baby villager will be selected; if count is two, the adult villager will also be selected.

help.playerSelectors.nameInverted=The checkbox labelled "Not" can negate this test, in a similar way to the negated target above. If this is checked, all entities that do %s have the given name will be matched.

help.playerSelectors.pos=(Warning: there is quite a bit of maths in these methods, especially in the second 2. If you're not prepared to take it on, no-one's forcing you to use the second 2, you can get away with the first most of the time.) You can select entities by their position. You can do this in one of three ways:
help.playerSelectors.pos.boundsFromTo.example=Say we want to select all entities within the flat red and orange grid, but none outside, such as the baby villager or the player. We would use the second method to make a cuboid from opposite corners of the grid. We first need to make a decision as to how tall the cuboid will be, let's say we want it two blocks tall. We get the coordinates of the bottom right of the grid (by the diamond armour stand), which happen to be (26, 65, -92) and type them into one of the X, Y and Z text fields. We then find the coordinates of the opposite corner (by the Ghast), but two blocks up because we want the cuboid two blocks tall. These coordinates work out to be (10, 67, -84), so we type the values 10, 67 and -84 into the other X, Y and Z text fields.
help.playerSelectors.pos.boundsDist.example=But what if we want to stand at one of the corners of the cuboid ourselves and then type in the size of the cuboid? We would use the third option for this. First, count the width of the box along the X-axis. This happens to be 17. Then, we count the height along the Y-axis, which we've decided is 2. Then, we count the length along the Z-axis, which happens to be 9. We'd then stand in the corner by the diamond armour stand, and open the command editor. We'd leave the first three coordinates blank, as they're automatically set to our current location. But for the distance, we'd type -17 (because we're going west, not east) in the X, 2 in the Y and 9 in the Z.

help.playerSelectors.facing.example1=Say we want to select all entities that are facing between south (towards the player in this diagram) and east (to the right in this diagram), so that the Enderman, the Endermite, the spider, the armour stands, the sheep, the adult villager and various chicken are selected. Here we are interested in horizontal rotation only. South has a value of 180, and east has a value of 90. 90 is the smallest value here, so it goes in the "At Least" box, and 180 goes in the "At Most" box.
help.playerSelectors.facing.example2=But what if we want to select entities which are facing towards the sky in some way, so that the sheep and the adult villager are selected. So we want the entities to be facing further up than horizontally. Facing horizontally has a value of 0, so we want the entity's vertical rotation to be less than zero, or have a maximum value of zero. But having a maximum value of zero will also include 0, so entities facing horizontally will also be selected. To fix this, we set the maximum value to -1. There is no minimum value, so we only have to put the value -1 into the "At Most" text box in the vertical rotation area.
